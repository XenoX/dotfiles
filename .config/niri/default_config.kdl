// Copyright (C) 2020-2025 Aditya Shakya <adi1090x@gmail.com>
//
// Niri configuration file for Archcraft
// Niri Version: 25.08

// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

// ---------------------------------------------------------------
//
// Input device configuration
//
// Find the full list of options on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
    keyboard {
        xkb {
            // layout     "us"
            // variant    "colemak_dh_ortho"
            // options    "compose:ralt,ctrl:nocaps"
            // model      ""
            // rules      ""
            // file       "~/.config/keymap.xkb"
        }

        // repeat-delay   600
        // repeat-rate    25
        // track-layout   "global"
        // numlock
    }

    touchpad {
        // off
        tap
        // dwt
        // dwtp
        // drag                  false
        // drag-lock             
        // natural-scroll        
        // accel-speed           0.2
        // accel-profile         "flat"
        // scroll-factor         1.0
        // scroll-factor         vertical=1.0 horizontal=-2.0
        // scroll-method         "two-finger"
        // scroll-button         273
        // scroll-button-lock    
        // tap-button-map        "left-middle-right"
        // click-method          "clickfinger"
        // left-handed
        // disabled-on-external-mouse
        // middle-emulation
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed           0.2
        // accel-profile         "flat"
        // scroll-factor         1.0
        // scroll-factor         vertical=1.0 horizontal=-2.0
        // scroll-method         "no-scroll"
        // scroll-button         273
        // scroll-button-lock
        // left-handed
        // middle-emulation
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed           0.2
        // accel-profile         "flat"
        // scroll-method         "on-button-down"
        // scroll-button         273
        // scroll-button-lock
        // left-handed
        // middle-emulation
    }

    trackball {
        // off
        // natural-scroll
        // accel-speed           0.2
        // accel-profile         "flat"
        // scroll-method         "on-button-down"
        // scroll-button         273
        // scroll-button-lock
        // left-handed
        // middle-emulation
    }

    tablet {
        // off
        // map-to-output         "eDP-1"
        // left-handed           
        // calibration-matrix    1.0 0.0 0.0 0.0 1.0 0.0
    }

    touch {
        // off
        // map-to-output "eDP-1"
    }

    // disable-power-key-handling
    // warp-mouse-to-focus     mode="center-xy"
    // focus-follows-mouse     max-scroll-amount="0%"
    workspace-auto-back-and-forth

    mod-key        "Super"
    mod-key-nested "Alt"
}

// ---------------------------------------------------------------
//
// Outputs configuration
//
// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
/-output "eDP-1" {
    // Uncomment this line to disable this output.
    // off

    // Resolution and, optionally, refresh rate of the output.
    // The format is "<width>x<height>" or "<width>x<height>@<refresh rate>".
    // If the refresh rate is omitted, niri will pick the highest refresh rate
    // for the resolution.
    // If the mode is omitted altogether or is invalid, niri will pick one automatically.
    // Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@60.027"

    // You can use integer or fractional scale, for example use 1.5 for 150% scale.
    scale 1.0

    // Transform allows to rotate the output counter-clockwise, valid values are:
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"

    // Position of the output in the global coordinate space.
    // This affects directional monitor actions like "focus-monitor-left", and cursor movement.
    // The cursor can only move between directly adjacent outputs.
    // Output scale and rotation has to be taken into account for positioning:
    // outputs are sized in logical, or scaled, pixels.
    // For example, a 3840×2160 output with scale 2.0 will have a logical size of 1920×1080,
    // so to put another output directly adjacent to it on the right, set its x to 1920.
    // If the position is unset or results in an overlap, the output is instead placed
    // automatically.
    position x=0 y=0

    // This flag enables variable refresh rate (VRR, also known as adaptive sync, FreeSync, or G-Sync),
    // if the output supports it. You can also set the on-demand=true property, which will only enable 
    // VRR when this output shows a window matching the variable-refresh-rate window rule.
    // This is helpful to avoid various issues with VRR, since it can be disabled most of the time,
    // and only enabled for specific windows, like games or video players.
    variable-refresh-rate // on-demand=true

    // Focus this output by default when niri starts.
    // If multiple outputs with focus-at-startup are connected, they are prioritized in the order that they appear in the config.
    focus-at-startup

    // Set the background color that niri draws for workspaces on this output. 
    // This is visible when you're not using any background tools like swaybg.
    background-color "#1b202f"

    // Set the backdrop color that niri draws for this output. This is visible between workspaces or in the overview.
    backdrop-color "#252b3f"
}

/-output "HDMI-A-1" {
    // ... example settings for HDMI-A-1...
    // off
    mode                  "1920x1080@60.000"
    scale                 1.0
    transform             "normal"
    position              x=1920 y=0
    variable-refresh-rate on-demand=true
    focus-at-startup
    background-color "#1b202f"
    backdrop-color "#252b3f"
}

/-output "Some Company CoolMonitor 1234" {
    // ...settings for CoolMonitor...
}

// ---------------------------------------------------------------
//
// Layout configuration
//
// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
//
// Do not remove '//-AB-CD' comments. These are for theming scripts.
layout {
    // Set gaps around windows in logical pixels.
    gaps 12

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    // If set, niri will always center a single column on a workspace, regardless of the "center-focused-column" option.
    always-center-single-column

    // If set, niri will always add an empty workspace at the very start, in addition to the empty workspace at the very end.
    // empty-workspace-above-first

    // Sets the default display mode for new columns. Can be "normal" or "tabbed".
    default-column-display "normal"

    // Set the default background color that niri draws for workspaces.
    // This is visible when you're not using any background tools like swaybg.
    background-color "#1b202f"

    // You can customize the widths that "switch-preset-column-width" (Mod+G) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        fixed 1366
    }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+G) toggles between.
    preset-window-heights {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        fixed 768
    }
        
    // ------------------------

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        // off

        // How many logical pixels the ring extends out from the windows.
        width 4

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        //-FR-AC
        active-color "#c574dd"

        // Color of the ring on inactive monitors.
        //-FR-IAC
        inactive-color "#252b3f"

        // Color of the ring on urgent monitors.
        //-FR-UC
        urgent-color "#f37f97"

        // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        // Changing the color space is also supported, check the wiki for more info.
        //
        //-FR-CGS
        active-gradient from="#c574dd" to="#8897f4" angle=90
        inactive-gradient from="#252b3f" to="#1b202f" angle=90
        urgent-gradient from="#f37f97" to="#f2a272" angle=90

        // You can set the gradient interpolation color space using syntax like in="srgb-linear" or in="oklch longer hue".
        // Supported color spaces are:
        // srgb (the default),
        // srgb-linear,
        // oklab,
        // oklch with "shorter hue" or "longer hue" or "increasing hue" or "decreasing hue"
        //active-gradient from="#C50ED2" to="#8500F7" angle=45 in="oklch longer hue"

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
        // urgent-gradient from="#800" to="#a33" angle=45
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        // The settings are the same as for the focus ring.
        // If you enable the border, you probably want to disable the focus ring.
        off

        width 4

        //-BD-AC
        active-color "#c574dd"
        //-BD-IAC
        inactive-color "#252b3f"
        //-BD-UC
        urgent-color "#f37f97"

        //-BD-CGS
        //active-gradient from="#c574dd" to="#8897f4" angle=90 relative-to="workspace-view"
        //inactive-gradient from="#252b3f" to="#1b202f" angle=90 relative-to="workspace-view" in="srgb-linear"
        //urgent-gradient from="#f37f97" to="#f2a272" angle=90
    }

    // ------------------------

    // You can enable drop shadows for windows.
    shadow {
        // Uncomment the next line to enable shadows.
        on

        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // By default, the shadow draws only around its window, and not behind it.
        // Uncomment this setting to make the shadow draw behind its window.
        //
        // Note that niri has no way of knowing about the CSD window corner
        // radius. It has to assume that windows have square corners, leading to
        // shadow artifacts inside the CSD rounded corners. This setting fixes
        // those artifacts.
        // 
        // However, instead you may want to set prefer-no-csd and/or
        // geometry-corner-radius. Then, niri will know the corner radius and
        // draw the shadow correctly, without having to draw it behind the
        // window. These will also remove client-side shadows if the window
        // draws any.
        // 
        // draw-behind-window true

        // You can also change the shadow color and opacity.
        color "#00000065"
        //inactive-color "#00000045"
    }

    // ------------------------

    tab-indicator {
		// hide the tab indicator.
        // off

		// hide the indicator for tabbed columns that only have a single window.
        hide-when-single-tab

		// put the tab indicator "within" the column, rather than outside.
        place-within-column

		// sets the gap between the tab indicator and the window in logical pixels.
		// The gap can be negative, this will put the tab indicator on top of the window.
        gap 8

		// sets the thickness of the indicator in logical pixels.
        width 6

		// controls the length of the indicator. 
		// Set the "total-proportion" property to make tabs take up this much length relative to the window size.
		// By default, the tab indicator has length equal to half of the window size, or "length total-proportion=0.5"
        length total-proportion=0.6

		// sets the position of the tab indicator relative to the window.
		// It can be "left", "right", "top", or "bottom"
        position "bottom"

		// controls the gap between individual tabs in logical pixels.
        gaps-between-tabs 4

		// sets the rounded corner radius for tabs in the indicator in logical pixels.
		// When "gaps-between-tabs" is zero, only the first and the last tabs have rounded corners, otherwise all tabs do.
        corner-radius 12

		// override the colors for the tabs.
        //-TI-AC
        active-color "#c574dd"
        //-TI-IAC
        inactive-color "#252b3f"
        //-TI-UC
        urgent-color "#f37f97"

        //-TI-CGS
        //active-gradient from="#c574dd" to="#8897f4" angle=90
        //inactive-gradient from="#252b3f" to="#1b202f" angle=90
        //urgent-gradient from="#f37f97" to="#f2a272" angle=90
    }

    // ------------------------

    // Settings for the window insert position hint during an interactive window move.
    insert-hint {
        // off

        //-IH-CS
        //color "#c574dd80"

        //-IH-CGS
        gradient from="#c574dd80" to="#8897f480" angle=45
    }

    // ------------------------

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

// ---------------------------------------------------------------
//
// Switch Events configuration.
//
switch-events {
	// These events correspond to closing and opening of the laptop lid.
    lid-close { spawn "niri" "msg" "action" "power-off-monitors"; }
    lid-open  { spawn "niri" "msg" "action" "power-on-monitors"; }

    // These events trigger when a convertible laptop goes into or out of tablet mode.
    //tablet-mode-on  { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled true"; }
    //tablet-mode-off { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled false"; }
}

// ---------------------------------------------------------------
//
// Miscellaneous configuration.
//
// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.
//
// This line starts waybar, a commonly used bar for Wayland compositors.
//spawn-at-startup "waybar"

// Add lines like this to run shell commands at niri startup.
//
// This line execute the startup script, launching various programs.
spawn-sh-at-startup "~/.config/niri/scripts/startup"

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
//
// Note that currently this will prevent edge window resize handles from showing up.
// You can still resize windows by holding "Mod" and the "right mouse button".
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Niri/screenshot_%Y-%m-%d_%H-%M-%S.png"

// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

// Override environment variables for processes spawned by niri.
environment {
    QT_QPA_PLATFORM "wayland"
}

// Change the theme and size of the cursor as well as set the "XCURSOR_THEME" and "XCURSOR_SIZE" environment variables.
cursor {
    //xcursor-theme "Sweet"
    //xcursor-size 24

    hide-when-typing
    hide-after-inactive-ms 5000
}

// Settings for the Overview.
overview {
    zoom 0.5
    backdrop-color "#252b3f"

    workspace-shadow {
        // off
        softness 50
        spread 10
        offset x=5 y=5
        color "#00000060"
    }
}

// Settings for integration with xwayland-satellite.
// When a recent enough xwayland-satellite is detected, niri will create the X11 sockets and set DISPLAY, 
// then automatically spawn xwayland-satellite when an X11 client tries to connect.
// If Xwayland dies, niri will keep watching the X11 socket and restart xwayland-satellite as needed. 
// This is very similar to how built-in Xwayland works in other compositors.
xwayland-satellite {
    // off
    path "xwayland-satellite"
}

// Clipboard settings.
clipboard {
	// flag to disable the primary clipboard (middle-click paste).
	// Toggling this flag will only apply to applications started afterward.
    disable-primary
}

// Settings for the "Important Hotkeys" overlay.
hotkey-overlay {
	// Set this flag if you don't want to see the hotkey help at niri startup.
    skip-at-startup
    // Set this flag if you want to hide all actions not bound to any key.
    hide-not-bound
}

// Settings for the config created/failed notification.
config-notification {
	// Set this flag to disable the "Failed to parse the config file" notification.
    // disable-failed
}

// Named Workspaces
// Declare a workspace named "chat" that opens on the "DP-2" output.
/-workspace "chat" {
    open-on-output "DP-2"
}
//workspace "browser"

// ---------------------------------------------------------------
//
// Animation configuration.
//
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Uncomment to turn off all animations.
    // You can also put "off" into each individual animation to disable it.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0

    // Animation Types : There are two animation types: easing and spring.
    // Each animation can be either an easing or a spring.
    //
	// 1. Easing
	//
    // Currently, niri only supports five curves.
    // ease-out-quad
    // ease-out-cubic
    // ease-out-expo
    // linear
    // cubic-bezier: A custom cubic Bézier curve. You need to set 4 numbers defining the control points of the curve, for example: 
    // curve "cubic-bezier" 0.05 0.7 0.1 1
    //
    // 2. Spring
    //
    // Spring animations use a model of a physical spring to animate the value.
    // They notably feel better with touchpad gestures, because they take into account the velocity of your fingers as you release the swipe.
    // A spring animation is configured like this, with three mandatory parameters:
    // spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001

    // Animation when switching workspaces up and down, including after the vertical touchpad gesture.
    workspace-switch {
        spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }

    // Window opening animation.
    window-open {
        duration-ms 150
        curve "ease-out-expo"
    }

    // Window closing animation.
    window-close {
        duration-ms 150
        curve "ease-out-quad"
    }

    // All horizontal camera view movement animations.
    horizontal-view-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    // Movement of individual windows within a workspace.
    window-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    // Window resize animation.
    window-resize {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    // The open/close animation of the config parse error and new default config notifications.
    config-notification-open-close {
        spring damping-ratio=0.6 stiffness=1000 epsilon=0.001
    }

    // The open/close animation of the exit confirmation dialog.
    exit-confirmation-open-close {
        spring damping-ratio=0.6 stiffness=500 epsilon=0.01
    }

    // The open (fade-in) animation of the screenshot UI.
    screenshot-ui-open {
        duration-ms 200
        curve "ease-out-quad"
    }

    // The open/close zoom animation of the Overview.
    overview-open-close {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }
}

// ---------------------------------------------------------------
//
// Window rules configuration.
//
// Window rules let you adjust behavior for individual windows.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules

// Make the window open in the floating layout.
window-rule {
    match app-id=r#"float$"#
    match app-id=r#"popup$"#
    match app-id=r#"alacritty-float$"#
    match app-id=r#"foot-float$"#
    match app-id=r#"kitty-float$"#
    match app-id=r#"foot-full$"#
    match app-id=r#"Yad$"#
    match app-id=r#"yad$"#
    match app-id=r#"nm-connection-editor$"#
    match app-id=r#"pavucontrol$"#
    match app-id=r#"xfce-polkit$"#
    match app-id=r#"kvantummanager$"#
    match app-id=r#"qt5ct$"#
    match app-id=r#"qt6ct$"#
    match app-id=r#"feh$"#
    match app-id=r#"viewnior$"#
    match app-id=r#"gpicview$"#
    match app-id=r#"gimp$"#
    match app-id=r#"MPlayer$"#
    match app-id=r#"VirtualBox Manager$"#
    match app-id=r#"Qemu-system-x86_64$"#
    match app-id=r#"wlogout$"#

    match title="^Picture-in-Picture$"
    match title="^Archcraft Installer$"
    match title="^About$"
    match app-id=r#"^thunar$"# title="^Rename.*$"

    open-floating true
}

// Open alacritty-float window as floating with 480×270 size.
window-rule {
    match app-id=r#"alacritty-float$"#

    open-floating true
    default-column-width { fixed 785; }
    default-window-height { fixed 450; }
}

// Make Archcraft About window FLOAT up and down.
window-rule {
    match title="^About Archcraft$"

    open-floating true
    baba-is-float true
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Indicate screencasted windows with red colors.
window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#FF4971"
        inactive-color "#1A1D2B"
    }
    border {
        active-color "#FF4971"
        inactive-color "#1A1D2B"
    }
    shadow {
        softness 30
        spread 10
        offset x=0 y=5
        color "#FF497190"
    }
    tab-indicator {
        active-color "#FF4971"
        inactive-color "#242735"
    }
}

// Example: Open Fractal on the "chat" workspace, if it runs at niri startup.
/-window-rule {
    match at-startup=true app-id=r#"^org\.gnome\.Fractal$"#
    open-on-workspace "chat"
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 10
    clip-to-geometry true
}

// ---------------------------------------------------------------
//
// Layer rules configuration.
//
// Layer rules let you adjust behavior for individual layer-shell surfaces. 
// They have "match" and "exclude" directives that control which layer-shell surfaces the rule should apply to, and a number of properties that you can set.
layer-rule {
    match namespace="waybar"
    match at-startup=true

    // Properties that apply continuously.
    opacity 1.0
    block-out-from "screencast"
    // block-out-from "screen-capture"

    shadow {
        on
        softness 30
        spread 5
        offset x=0 y=5
        draw-behind-window true
        color "#00000050"
    }

    geometry-corner-radius 0
    // place-within-backdrop true
}

// Add shadows in Rofi
layer-rule {
    match namespace="rofi"
    shadow {
        on
        softness 30
        spread 5
        offset x=0 y=5
        draw-behind-window true
        color "#00000050"
    }
    geometry-corner-radius 10
}

// Block out mako notifications from screencasts.
layer-rule {
    match namespace="^notifications$"
    block-out-from "screencast"
    shadow {
        on
        softness 30
        spread 5
        offset x=0 y=5
        draw-behind-window true
        color "#00000050"
    }
    geometry-corner-radius 10
}

// Put swaybg inside the overview backdrop.
layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop false
}

// ---------------------------------------------------------------
//
// Gestures configuration.
//
gestures {
    dnd-edge-view-scroll {
        trigger-width 30
        delay-ms 100
        max-speed 1500
    }

    dnd-edge-workspace-switch {
        trigger-height 50
        delay-ms 100
        max-speed 1500
    }

    hot-corners {
        // off
    }
}

// ---------------------------------------------------------------
//
// Keybinds configuration.
//
binds {
    // Mouse Bindings
    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight                     { focus-column-right; }
    Mod+WheelScrollLeft                      { focus-column-left; }
    Mod+Ctrl+WheelScrollRight                { move-column-right; }
    Mod+Ctrl+WheelScrollLeft                 { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown                { focus-column-right; }
    Mod+Shift+WheelScrollUp                  { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown           { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp             { move-column-left; }

    // Mod+MouseLeft                         { close-window; }
    // Mod+MouseRight                        { close-window; }
    Mod+MouseMiddle                       { close-window; }
    // Mod+MouseForward                      { close-window; }
    // Mod+MouseBack                         { close-window; }

    // Touchpad Bindings
    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    Mod+TouchpadScrollUp                     { spawn "~/.config/niri/scripts/brightness" "--inc"; }
    Mod+TouchpadScrollDown                   { spawn "~/.config/niri/scripts/brightness" "--dec"; }

    // ------------------------

    // Key Bindings
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash  { show-hotkey-overlay; }

    // -- Terminal : alacritty --
    Mod+Return       hotkey-overlay-title="Open Terminal (alacritty)"         { spawn "~/.config/niri/scripts/alacritty"; }
    Mod+Shift+Return hotkey-overlay-title="Open alacritty in floating mode"   { spawn "~/.config/niri/scripts/alacritty" "-f"; }
    Mod+T            hotkey-overlay-title="Open alacritty in fullscreen mode" { spawn "~/.config/niri/scripts/alacritty" "-F"; }

    // -- Terminal : kitty --
    //Mod+Return       hotkey-overlay-title="Open Terminal (kitty)"         { spawn "~/.config/niri/scripts/kitty"; }
    //Mod+Shift+Return hotkey-overlay-title="Open kitty in floating mode"   { spawn "~/.config/niri/scripts/kitty" "-f"; }
    //Mod+T            hotkey-overlay-title="Open kitty in fullscreen mode" { spawn "~/.config/niri/scripts/kitty" "-F"; }
																			    
    // -- Terminal : foot --                                                    
    //Mod+Return       hotkey-overlay-title="Open Terminal (foot)"         { spawn "~/.config/niri/scripts/foot"; }
    //Mod+Shift+Return hotkey-overlay-title="Open foot in floating mode"   { spawn "~/.config/niri/scripts/foot" "-f"; }
    //Mod+Alt+Return   hotkey-overlay-title="Open foot in selection mode"  { spawn "~/.config/niri/scripts/foot" "-s"; }
    //Mod+T            hotkey-overlay-title="Open foot in fullscreen mode" { spawn "~/.config/niri/scripts/foot" "-F"; }

    // -- Applications --
    Mod+Shift+F hotkey-overlay-title="Open file manager (thunar)" { spawn "thunar"; }
    Mod+Shift+E hotkey-overlay-title="Open text editor (geany)"   { spawn "geany"; }
    Mod+Shift+W hotkey-overlay-title="Open web browser (firefox)" { spawn "firefox"; }

    // -- Rofi Applets --
    Mod+D  hotkey-overlay-title="Run an application: rofi"     { spawn "~/.config/niri/scripts/rofi_launcher"; }
    Alt+F1 hotkey-overlay-title="Run application launcher"     { spawn "~/.config/niri/scripts/rofi_launcher"; }
    Alt+F2 hotkey-overlay-title="Run command runner"           { spawn "~/.config/niri/scripts/rofi_runner"; }
    Mod+R  hotkey-overlay-title="Run apps as root rofi applet" { spawn "~/.config/niri/scripts/rofi_asroot"; }
    Mod+M  hotkey-overlay-title="Run music rofi applet"        { spawn "~/.config/niri/scripts/rofi_music"; }
    Mod+N  hotkey-overlay-title="Run nerwork-menu rofi applet" { spawn "~/.config/niri/scripts/rofi_network"; }
    Mod+B  hotkey-overlay-title="Run bluetooth rofi applet"    { spawn "~/.config/niri/scripts/rofi_bluetooth"; }
    Mod+X  hotkey-overlay-title="Run powermenu rofi applet"    { spawn "~/.config/niri/scripts/rofi_powermenu"; }
    Mod+S  hotkey-overlay-title="Run screenshot rofi applet"   { spawn "~/.config/niri/scripts/rofi_screenshot"; }

    // -- Misc --
    //Mod+N      hotkey-overlay-title="Open network connection editor"   { spawn "nm-connection-editor"; }
    //Mod+X      hotkey-overlay-title="Run wlogout"                      { spawn "~/.config/niri/scripts/wlogout"; }
    Mod+P      hotkey-overlay-title="Run colorpicker"                  { spawn "~/.config/niri/scripts/colorpicker"; }
    Ctrl+Alt+L hotkey-overlay-title="Lock the Screen: hyprlock"        { spawn-sh "hyprlock --config ~/.config/niri/hyprlock.conf"; }
    //Ctrl+Alt+L hotkey-overlay-title="Lock the Screen: swaylock"        { spawn "~/.config/niri/scripts/lockscreen"; }

    // -- CLI Tools --
    Ctrl+Alt+V hotkey-overlay-title="Run vim in terminal"     { spawn "~/.config/niri/scripts/alacritty" "-e" "vim"; }
    Ctrl+Alt+R hotkey-overlay-title="Run ranger in terminal"  { spawn "~/.config/niri/scripts/alacritty" "-e" "ranger"; }
    Ctrl+Alt+H hotkey-overlay-title="Run htop in terminal"    { spawn "~/.config/niri/scripts/alacritty" "-e" "htop"; }
    Ctrl+Alt+M hotkey-overlay-title="Run ncmpcpp in terminal" { spawn "~/.config/niri/scripts/alacritty" "-e" "ncmpcpp"; }

    // -- Function keys --
    XF86MonBrightnessUp   allow-when-locked=true { spawn "~/.config/niri/scripts/brightness" "--inc"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "~/.config/niri/scripts/brightness" "--dec"; }
    XF86AudioRaiseVolume  allow-when-locked=true { spawn "~/.config/niri/scripts/volume" "--inc"; }
    XF86AudioLowerVolume  allow-when-locked=true { spawn "~/.config/niri/scripts/volume" "--dec"; }
    XF86AudioMute         allow-when-locked=true { spawn "~/.config/niri/scripts/volume" "--toggle"; }
    XF86AudioMicMute      allow-when-locked=true { spawn "~/.config/niri/scripts/volume" "--toggle-mic"; }
    XF86AudioNext         allow-when-locked=true { spawn "mpc" "next"; }
    XF86AudioPrev         allow-when-locked=true { spawn "mpc" "prev"; }
    XF86AudioPlay         allow-when-locked=true { spawn "mpc" "toggle"; }
    XF86AudioStop         allow-when-locked=true { spawn "mpc" "stop"; }

    // -- Screenshots --
    Print       hotkey-overlay-title="Take screenshot: screen" { spawn "~/.config/niri/scripts/screenshot" "--now"; }
    Alt+Print   hotkey-overlay-title="Take screenshot in 5s"   { spawn "~/.config/niri/scripts/screenshot" "--in5"; }
    Shift+Print hotkey-overlay-title="Take screenshot in 10s"  { spawn "~/.config/niri/scripts/screenshot" "--in10"; }
    Ctrl+Print  hotkey-overlay-title="Take screenshot: window" { spawn "~/.config/niri/scripts/screenshot" "--win"; }
    Mod+Print   hotkey-overlay-title="Take screenshot: area"   { spawn "~/.config/niri/scripts/screenshot" "--area"; }

    // Niri's built-in screenshot tool
    // The screenshot is both stored to the clipboard and saved to disk, according to the screenshot-path option.
    // You can disable saving to disk for a specific bind with the "write-to-disk=false" property.
    // You can hide the mouse pointer in screenshots with the "show-pointer=false" property.
    //Print      { screenshot; }
    //Ctrl+Print { screenshot-screen; }
    //Alt+Print  { screenshot-window; }

    // -- Niri : Windows --

    // Close the focused window
    Mod+Q { close-window; }

    // Toggle fullscreen on the focused window
    //Mod+F { fullscreen-window; }
    Mod+F { maximize-column; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Space       { toggle-window-floating; }
    Mod+Shift+Space { switch-focus-between-floating-and-tiling; }

    // Center the focused column on the screen
    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Focus the column/window
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    // Move the column/window
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    // Mod+J     { focus-window-or-workspace-down; }
    // Mod+K     { focus-window-or-workspace-up; }
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    // Focus first/last column 
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    // Focus monitors
    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    // Move b/w monitors
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    // Focus/Move to workspaces
    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    // Cycling through the presets sizes
    Mod+G { switch-preset-column-width; }
    Mod+Shift+G { switch-preset-window-height; }
    Mod+Ctrl+G { reset-window-height; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Alt+Space       { switch-layout "next"; }
    // Mod+Alt+Shift+Space { switch-layout "prev"; }

    // -- Niri : Misc --

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+O repeat=false { toggle-overview; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}
